<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.hivesystem.maintenance.mapper.MaintenanceMapper">
    <!-- 01. 유지보수 목록 조회 -->
    <select id="listMaintenance" resultType="kr.co.hivesystem.maintenance.vo.MaintenanceVO">
        SELECT BNO,PROJECT_NAME,CONTRACT_TYPE,CUSTOMER_COMPANY,START_DATE,END_DATE,MAINTENANCE_ID
        FROM MAINTENANCE_INFO
        
        <!-- where 절을 include 태그로 삽입 -->
        <include refid="search"></include>
        ORDER BY BNO DESC
    </select>
    
    <!-- sql 조각 code -->
    <sql id="search">
        <choose>
            <!-- 검색 옵션이 전체 검색일 때 -->
            <when test="searchOption == 'all'">
                WHERE PROJECT_NAME LIKE CONCAT('%', #{keyword}, '%')
   OR CONTRACT_TYPE LIKE CONCAT('%', #{keyword}, '%')
   OR CUSTOMER_COMPANY LIKE CONCAT('%', #{keyword}, '%')
   OR START_DATE LIKE CONCAT('%', #{keyword}, '%')
   OR END_DATE LIKE CONCAT('%', #{keyword}, '%')
            </when>
            
            <!-- 전체 검색이 아닌 경우 -->
            <otherwise>
                WHERE ${searchOption} LIKE CONCAT('%', #{keyword}, '%')
            </otherwise>
        </choose>
    </sql>
    
    <sql id="findProject">
        <choose>
            <!-- 검색 옵션이 전체 검색일 때 -->
            <when test="searchOption == 'all'">	
				WHERE PROJECT_NAME LIKE CONCAT('%', #{keyword}, '%')
   				OR PROJECT_COMPANY LIKE CONCAT('%', #{keyword}, '%')
   				OR CUSTOMER_MANAGER LIKE CONCAT('%', #{keyword}, '%')
   				OR CUSTOMER_MAN_TEL LIKE CONCAT('%', #{keyword}, '%')
            </when>
            
            <!-- 전체 검색이 아닌 경우 -->
            <otherwise>
                WHERE ${searchOption} LIKE CONCAT('%', #{keyword}, '%')
            </otherwise>
        </choose>
    </sql>
    
    <!-- 검색 시 -->
    <select id="findProject" resultType="kr.co.hivesystem.project.vo.ProjectVO">
        SELECT BNO,PROJECT_NAME,PROJECT_COMPANY,CUSTOMER_MANAGER,CUSTOMER_MAN_TEL
        FROM PROJECT_INFO
        
        <include refid="findProject"></include>
        ORDER BY BNO DESC
    </select>
        
    <!-- 02. 유지보수 등록 -->
    <insert id="insertMaintenance">
    INSERT INTO MAINTENANCE_INFO(
        BNO, PROJECT_NAME, CONTRACT_TYPE, CUSTOMER_COMPANY, START_DATE, END_DATE, CUSTOMER_MANAGER,
        CUSTOMER_MAN_TEL, INSPECTOR, INSPECTOR_COMPANY, CHECKER, CHECKER_COMPANY, MEMBER_ID, MAINTENANCE_ID, MAINTENANCE_INSERT_DATE
    )
    VALUES(
        (SELECT NVL(MAX(BNO)+1, 1) FROM MAINTENANCE_INFO AS subtable),
        #{PROJECT_NAME}, #{CONTRACT_TYPE}, #{CUSTOMER_COMPANY},
        #{START_DATE}, #{END_DATE}, #{CUSTOMER_MANAGER}, #{CUSTOMER_MAN_TEL},
        #{INSPECTOR}, #{INSPECTOR_COMPANY}, #{CHECKER}, #{CHECKER_COMPANY},
        #{MEMBER_ID},
        SUBSTRING(MD5(RAND()), 1, 16),DATE(NOW())
    )
	</insert>

    <insert id="insertService">
    INSERT INTO LIST_INFO(
        INSPECTION_ID,INSPECTION_DATE, MAINTENANCE_ID, SERVICE_LIST1, SERVICE_LIST2, SERVICE_LIST3, SERVICE_LIST4,
        SERVICE_LIST5, SERVICE_LIST6, INSPECTION_RESULT, INSPECTOR, LIST_TYPE, VISIT_TYPE,
        LIST_TITLE, ETC, CHECKER, CHECKER_TEL, CONTRACT_TYPE
    )
    VALUES (
    	(SELECT NVL(MAX(INSPECTION_ID)+1, 1) FROM list_info AS subtable),
        #{INSPECTION_DATE},
        #{MAINTENANCE_ID},
        #{SERVICE_LIST1}, #{SERVICE_LIST2}, #{SERVICE_LIST3}, #{SERVICE_LIST4},
        #{SERVICE_LIST5}, #{SERVICE_LIST6},
        #{INSPECTION_RESULT}, #{INSPECTOR}, #{LIST_TYPE}, #{VISIT_TYPE},
        #{LIST_TITLE}, #{ETC}, #{CHECKER}, #{CHECKER_TEL}, #{CONTRACT_TYPE}
    )
	</insert>
	
    <insert id="insertResult">
    INSERT INTO LIST_INFO (
        INSPECTION_ID,INSPECTION_DATE, MAINTENANCE_ID, LIST1, LIST2, LIST3, LIST4, LIST5, LIST6,
        LIST7, LIST8, LIST9, LIST10, LIST11, INSPECTION_RESULT, INSPECTOR, LIST_TYPE,
        LIST_TITLE, ETC, CHECKER, INSPECTOR_COM, CONTRACT_TYPE, CHECKER_COM
    )
    VALUES (
    (SELECT NVL(MAX(INSPECTION_ID)+1, 1) FROM list_info AS subtable),
        #{INSPECTION_DATE},
        #{MAINTENANCE_ID},
        #{LIST1}, #{LIST2}, #{LIST3}, #{LIST4}, #{LIST5}, #{LIST6},
        #{LIST7}, #{LIST8}, #{LIST9}, #{LIST10}, #{LIST11},
        #{INSPECTION_RESULT}, #{INSPECTOR}, #{LIST_TYPE}, #{LIST_TITLE},
        #{ETC}, #{CHECKER}, #{INSPECTOR_COM}, #{CONTRACT_TYPE}, #{CHECKER_COM}
    )
	</insert>

    	
    <!-- 03. 유지보수 상세 보기 -->
    <select id="viewMaintenance" resultType="kr.co.hivesystem.maintenance.vo.MaintenanceVO">
        SELECT *
        FROM MAINTENANCE_INFO
        WHERE BNO = #{BNO}
    </select>
    
    
    <select id="loadService" resultType="kr.co.hivesystem.maintenance.vo.listVO">
        SELECT *
        FROM LIST_INFO
        WHERE INSPECTION_ID = #{INO}
    </select>
    
    <select id="loadResult" resultType="kr.co.hivesystem.maintenance.vo.listVO">
        SELECT *
        FROM LIST_INFO
        WHERE INSPECTION_ID = #{INO}
    </select>
    
    <!-- 04. 유지보수 수정하기 -->
    <update id="updateMaintenance">
        UPDATE MAINTENANCE_INFO SET
        START_DATE= #{START_DATE},END_DATE= #{END_DATE},INSPECTOR= #{INSPECTOR},INSPECTOR_COMPANY= #{INSPECTOR_COMPANY},
        CHECKER= #{CHECKER},CHECKER_COMPANY= #{CHECKER_COMPANY}
        WHERE BNO = #{BNO}
    </update>
    
    
    <!--  등록 후   수정하기 -->
    <update id="updateMaintenanceId">
        UPDATE LIST_INFO SET
        MAINTENANCE_ID = (SELECT MAINTENANCE_ID FROM MAINTENANCE_INFO WHERE BNO = #{MAINTENANCE_ID})
        WHERE MAINTENANCE_ID = #{MAINTENANCE_ID}
    </update>
    
    <update id="service_update">
        UPDATE LIST_INFO SET
        SERVICE_LIST1 = #{SERVICE_LIST1},SERVICE_LIST2= #{SERVICE_LIST2},SERVICE_LIST3= #{SERVICE_LIST3},SERVICE_LIST4= #{SERVICE_LIST4},
        SERVICE_LIST5= #{SERVICE_LIST5},SERVICE_LIST6= #{SERVICE_LIST6},INSPECTION_RESULT= #{INSPECTION_RESULT},ETC= #{ETC},LIST_TITLE= #{LIST_TITLE},
        VISIT_TYPE= #{VISIT_TYPE},INSPECTOR= #{INSPECTOR},CHECKER= #{CHECKER},CHECKER_TEL= #{CHECKER_TEL}
        WHERE INSPECTION_ID = #{INSPECTION_ID}
    </update>
    
    <update id="result_update">
        UPDATE LIST_INFO SET
        LIST_TITLE= #{LIST_TITLE}, INSPECTION_RESULT= #{INSPECTION_RESULT},ETC = #{ETC}, INSPECTOR_COM= #{INSPECTOR_COM},
         INSPECTOR= #{INSPECTOR},CHECKER = #{CHECKER},CHECKER_COM = #{CHECKER_COM},LIST1 = #{LIST1}, LIST2= #{LIST2}, LIST3= #{LIST3},
         LIST4 = #{LIST4}, LIST5= #{LIST5}, LIST6= #{LIST6}, LIST7= #{LIST7}, LIST8= #{LIST8}, LIST9= #{LIST9}, LIST10= #{LIST10}, LIST11= #{LIST11}
        WHERE INSPECTION_ID = #{INSPECTION_ID}
    </update>
    
    <!-- 05. 유지보수 삭제하기 -->
    <delete id="deleteMaintenance">
        DELETE FROM LIST_INFO
        WHERE INSPECTION_ID = #{INO}
    </delete>
    
    <select id="monthList" resultType="kr.co.hivesystem.maintenance.vo.listVO">
        SELECT A.*
    	FROM LIST_INFO A
    	LEFT JOIN MAINTENANCE_INFO B
    	ON A.MAINTENANCE_ID = B.MAINTENANCE_ID
    	WHERE A.MAINTENANCE_ID IN (
      	SELECT MAINTENANCE_ID
      	FROM MAINTENANCE_INFO
      	WHERE BNO = #{BNO}
    	)
    	AND A.INSPECTION_DATE LIKE CONCAT('%', #{DATE}, '%')
    	ORDER BY A.INSPECTION_DATE
    </select>
    
    <select id="callList" resultType="kr.co.hivesystem.maintenance.vo.listVO">
        SELECT A.INSPECTION_ID, A.INSPECTION_DATE, A.INSPECTOR, B.MAINTENANCE_ID
    	FROM LIST_INFO A
    	LEFT JOIN MAINTENANCE_INFO B
    	ON A.MAINTENANCE_ID = B.MAINTENANCE_ID
    	WHERE A.MAINTENANCE_ID IN (
      	SELECT MAINTENANCE_ID
      	FROM MAINTENANCE_INFO
      	WHERE BNO = #{BNO}
    	)
    	ORDER BY A.INSPECTION_DATE 
    </select>
    
    
    
    <select id="viewList" resultType="kr.co.hivesystem.maintenance.vo.MaintenanceVO">
		SELECT *
		FROM MAINTENANCE_INFO 
		WHERE BNO = (
			SELECT A.BNO
			FROM MAINTENANCE_INFO A
			JOIN LIST_INFO B ON A.MAINTENANCE_ID = B.MAINTENANCE_ID
			WHERE B.INSPECTION_ID = #{INO}
		)     
    </select>
    
    <select id="find_listType" resultType="String">
        SELECT LIST_TYPE
        FROM LIST_INFO
        WHERE INSPECTION_ID = #{INO}
    </select>
    
    <select id="find_contractType" resultType="String">
        SELECT CONTRACT_TYPE
        FROM LIST_INFO
        WHERE INSPECTION_ID = #{INO}
    </select>
</mapper>